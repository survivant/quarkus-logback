quarkus.http.host=0.0.0.0
quarkus.http.port=8080
#quarkus.http.port=8123
quarkus.http.test-port=8282

com.comact.iep.logging.LoggingServiceRestConnector/mp-rest/url=http://localhost:8080

quarkus.kubernetes-client.master-url=https://kubernetes.default.svc

# we are not using valid certificate yet
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.namespace=default

#I filled a issue for that
quarkus.kubernetes.service-type=NodePort

# Required to benefit from swagger-ui with a native image
quarkus.swagger-ui.always-include=true
quarkus.logging-manager.enable=true
quarkus.logging-manager.ui.enable=true
quarkus.logging-manager.openapi.included=true

quarkus.kubernetes.image-pull-policy=Always

#DEV : need to pass this command line : mvn quarkus:dev -Dquarkus.profile=dev
# you need to check your port of minikube from kubeconfig
%dev.quarkus.kubernetes-client.master-url=https://localhost:50000
%test.quarkus.kubernetes-client.master-url=https://localhost:50000

quarkus.log.category."com.comact".level=debug
quarkus.log.category."io.fab.kub.cli.dsl.int.WatcherWebSocketListener".level=error
quarkus.log.level=INFO
quarkus.log.file.enable=true
quarkus.log.file.level=INFO
quarkus.log.file.rotation.max-file-size=20M
quarkus.log.file.rotation.max-backup-index=2

wait-for-cleanup.timeout.default=10
wait-for-cleanup.timeout.max=600
wait-for-cleanup.retry.max=10

# settings for logging-services
spring.application.name=kubernetes-api


# settings for cleanupJob
cleanupjob.service.name=kubernetes-api
cleanupjob.image.name=curlimages/curl

# Kafka
%prod.kafka.bootstrap.servers=kafka-cp-kafka:9092

# Configure the Kafka source (we read from it)
mp.messaging.incoming.cleanupjob.connector=smallrye-kafka
mp.messaging.incoming.cleanupjob.topic=cleanupjob
mp.messaging.incoming.cleanupjob.health-readiness-enabled=true
mp.messaging.incoming.cleanupjob.retry-max-wait=5
#mp.messaging.incoming.cleanupjob.value.deserializer=com.comact.kafka.deserializer.kubernetes.CleanupJobDeserializer

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.cleanupjob-completed.connector=smallrye-kafka
mp.messaging.outgoing.cleanupjob-completed.topic=cleanupjob-completed
mp.messaging.outgoing.cleanupjob-completed.retry-max-wait=5
#mp.messaging.outgoing.cleanupjob-completed.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# KEYCLOAK
keycloak.realm=comact
keycloak.realm.init.filename=/keycloak/comact-realm.json
quarkus.keycloak.devservices.realm-name=${keycloak.realm}
quarkus.keycloak.devservices.realm-path=${keycloak.realm.init.filename}

%prod.quarkus.oidc.auth-server-url=http://keycloak-http/auth/realms/${keycloak.realm}
quarkus.oidc.client-id=kubernetes-api
quarkus.oidc.credentials.secret=11912237-d02d-4a10-8392-7b917d167769

quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}

quarkus.oidc.token.issuer=any

keycloak.admin.user=admin
keycloak.admin.password=admin

#%dev.keycloak.admin.user=
#%dev.keycloak.admin.password=

# uncomment and adapt if you have keycloak already running
#%dev.quarkus.oidc.auth-server-url=http://localhost:8008/auth/realms/${keycloak.realm}
#%test.quarkus.oidc.auth-server-url=http://localhost:8008/auth/realms/${keycloak.realm}

#quarkus.log.category."io.quarkus".level=TRACE
#quarkus.log.category."io.quarkus".min-level=TRACE
#quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".min-level=TRACE
#quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".level=TRACE

# TRACING
quarkus.jaeger.service-name=kubernetes-api
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces
